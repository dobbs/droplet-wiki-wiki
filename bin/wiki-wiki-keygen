#!/bin/bash
set -euo pipefail
ITS=$'\n\r\t'

usage() {
  cat <<EOF
Usage: $(basename $0) IP_ADDR

generate ssh key pairs with organized subdirectories of .ssh

  ~/.ssh/config
    Include ~/.ssh/wiki-wiki/root-config
  ~/.ssh/wiki-wiki/harvester-config
    Host wiki-wiki
      User harvester
      Hostname IP-ADDR
      IdentityFile ~/.ssh/wiki-wiki/harvester-id_ecdsa
  ~/.ssh/wiki-wiki/root-config
    Host wiki-wiki
      User root
      Hostname IP-ADDR
      IdentityFile ~/.ssh/wiki-wiki/root-id_ecdsa

EOF
  exit 1
}

main() {
  parse-args "$@" || usage
  ensure-directory
  generate-configs
  generate-keys
}

parse-args() {
  readonly IP_ADDR="${1:-UNSPECIFIED}"
  readonly CONFIG_DIR=~/.ssh/wiki-wiki
  perl -e 'exit($ARGV[0] =~ qr{\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}} ? 0 : 1)' $IP_ADDR
}

ensure-directory() {
  mkdir -p ${CONFIG_DIR}
  chmod 700 ~/.ssh
  chmod 700 ${CONFIG_DIR}
}

generate-configs() {
  if ! grep -q "Include ${CONFIG_DIR}/root-config" ~/.ssh/config; then
    printf "Include %s/root-config\n" ${CONFIG_DIR} >> ~/.ssh/config
    chmod 600 ~/.ssh/config
  fi
  if ! test -r ${CONFIG_DIR}/root-config; then
    cat > ${CONFIG_DIR}/root-config <<EOF
Host wiki-wiki
  User root
  Hostname $IP_ADDR
  IdentityFile ${CONFIG_DIR}/root-id_ecdsa
EOF
    chmod 600 ${CONFIG_DIR}/root-config
  fi
  if ! test -r ${CONFIG_DIR}/harvester-config; then
    cat > ${CONFIG_DIR}/harvester-config <<EOF
Host wiki-wiki
  User harvester
  Hostname $IP_ADDR
  IdentityFile ${CONFIG_DIR}/harvester-id_ecdsa
EOF
    chmod 600 ${CONFIG_DIR}/harvester-config
  fi
}

generate-keys() {
  ssh-keygen -t ecdsa -b 521 -f ${CONFIG_DIR}/root-id_ecdsa
  ssh-keygen -t ecdsa -b 521 -f ${CONFIG_DIR}/harvester-id_ecdsa
}

main "$@"
